// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  username      String          @unique
  password      String
  files         File[]
  fastaAnalyses FastaAnalysis[]
  fastqAnalyses FastqAnalysis[]
}

enum FileCategory {
  GENOMIC
  PRIMER
  FASTQ
}

model File {
  id         Int          @id @default(autoincrement())
  filename   String       @unique
  path       String
  category   FileCategory
  uploadedAt DateTime     @default(now())
  userId     Int
  user       User         @relation(fields: [userId], references: [id])

  // Relations for different analysis types
  fastaAnalysis   FastaAnalysis? @relation("FastaFile")
  fastqAnalysisR1 FastqAnalysis? @relation("FastqFileR1")
  fastqAnalysisR2 FastqAnalysis? @relation("FastqFileR2")

  primerAnalyses    FastqAnalysis[] @relation("PrimerFile")
  referenceAnalyses FastqAnalysis[] @relation("ReferenceFile")
}

model FastaAnalysis {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int

  fastaFile   File @relation("FastaFile", fields: [fastaFileId], references: [id], onDelete: Cascade)
  fastaFileId Int  @unique

  result    String
  createdAt DateTime @default(now())

  @@unique([userId, fastaFileId])
}

model FastqAnalysis {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int

  sampleName    String
  sequenceCount Int

  fastqFileR1   File @relation("FastqFileR1", fields: [fastqFileR1Id], references: [id], onDelete: Cascade)
  fastqFileR1Id Int  @unique

  fastqFileR2   File @relation("FastqFileR2", fields: [fastqFileR2Id], references: [id], onDelete: Cascade)
  fastqFileR2Id Int  @unique

  primerFile   File @relation("PrimerFile", fields: [primerFileId], references: [id], onDelete: Cascade)
  primerFileId Int

  referenceFile   File @relation("ReferenceFile", fields: [referenceFileId], references: [id], onDelete: Cascade)
  referenceFileId Int

  result    String
  createdAt DateTime @default(now())

  @@unique([userId, sampleName, primerFileId, referenceFileId, sequenceCount])
}
