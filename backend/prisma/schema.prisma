// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  password    String
  files       File[]
}

model File {
  id          Int       @id @default(autoincrement())
  filename    String
  path        String
  category    String    // "genomic" or "primer" or "fastq"
  uploadedAt  DateTime  @default(now())
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  metadata    Metadata?
}

model Metadata {
  id          Int       @id @default(autoincrement())
  file        File      @relation(fields: [fileId], references: [id])
  fileId      Int       @unique
  content     String    // JSON string or summarized text output
}

model fastaAnalysis {
  id              Int       @id @default(autoincrement())
  user            User      @relation(fields: [userId], references: [id])
  userId          Int
  primerFile      File      @relation("PrimerAnalysis", fields: [primerFileId], references: [id])
  primerFileId    Int
  referenceFile   File      @relation("ReferenceFileId", fields: [referenceFileId], references])
  referenceFileId Int
  result          String
  createdAt       DateTime  @default(now())
}